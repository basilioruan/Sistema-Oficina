/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.PecaController;
import controller.ServicoController;
import controller.VendaController;
import helpers.Helper;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import models.Peca;
import models.Servico;
import models.Venda;

/**
 *
 * @author rmb
 */
public class TelaRealizarVenda extends javax.swing.JFrame {
    private final DefaultTableModel tabelaPecas;
    protected final DefaultTableModel tabelaCarrinho;
    private PecaController pecaController;
    private ServicoController servicoController;
    private VendaController vendaController;
    private ArrayList<Peca> pecasVenda;
    private ArrayList<Servico> servicosVenda;
    private float total;
    /**
     * Creates new form TelaRealizarVenda
     */
    public TelaRealizarVenda() {
        initComponents();
        total = 0;
        tfQuantidade.setText("1");
        tfDesconto.setText("0");
        tabelaPecas = (DefaultTableModel) jtPeca.getModel();
        tabelaCarrinho = (DefaultTableModel) jtCarrinho.getModel();
        pecasVenda = new ArrayList<Peca>();
        servicosVenda = new ArrayList<Servico>();
        
        try {
            vendaController = new VendaController();
            pecaController = new PecaController();
            servicoController = new ServicoController();
            servicoController.limparServicos();
            int tamanho = tabelaPecas.getRowCount();
            for (int i=0; i<tamanho; i++) {
                tabelaPecas.removeRow(0);
            }

            ArrayList<Peca> pecas = pecaController.getPecas();
            if(pecas != null){
                for (Peca peca : pecas) {
                    Object[] dados = {peca.getNome(), peca.getQuantidade(), peca.getPrecoVenda()};
                    tabelaPecas.addRow(dados);
                }
            }
        } catch (IOException ex) {
            Logger.getLogger(TelaBuscarPeca.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(TelaBuscarPeca.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    protected void contabilizarTabela(){
        int posicao = tabelaCarrinho.getRowCount();
        String servico = tabelaCarrinho.getValueAt(posicao-1, 0).toString();
        
        String precoTabela = (tabelaCarrinho.getValueAt(posicao-1,2).toString()).replace(",", ".");
        float valor = Float.parseFloat(precoTabela);
        total = total + valor;
        jlTotal.setText("" + total);
        String porcentagem = tfDesconto.getText().replace(",", ".");
        
        if(!porcentagem.equals("")){
            float desconto = Float.parseFloat(porcentagem);
            desconto = total*(desconto/100);
            jlDesconto.setText(String.format("%.2f", desconto));
            float novoTotal = total - desconto;
            jlValor.setText(String.format("%.2f", novoTotal));
        }
        else {
            jlDesconto.setText("0");
            jlValor.setText(String.format("%.2f", total));
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        buttonVoltar = new javax.swing.JButton();
        buttonAdicionar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtPeca = new javax.swing.JTable();
        tfNome = new javax.swing.JTextField();
        buttonOs = new javax.swing.JButton();
        jlCarrinho = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtCarrinho = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        buttonRemover = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jlTotal = new javax.swing.JLabel();
        jlDesconto = new javax.swing.JLabel();
        jlValor = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        tfQuantidade = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        buttonOrçamento = new javax.swing.JButton();
        buttonCaderneta = new javax.swing.JButton();
        buttonRealizarVenda = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        tfDesconto = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("SGO - Realizar Venda");
        setResizable(false);

        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 15)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Buscar produto");

        buttonVoltar.setText("Voltar");
        buttonVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonVoltarActionPerformed(evt);
            }
        });

        buttonAdicionar.setBackground(new java.awt.Color(0, 204, 204));
        buttonAdicionar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        buttonAdicionar.setForeground(new java.awt.Color(255, 255, 255));
        buttonAdicionar.setText("Adicionar");
        buttonAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAdicionarActionPerformed(evt);
            }
        });

        jtPeca.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jtPeca.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Produto", "Estoque", "Valor (R$)"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jtPeca);

        tfNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfNomeKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfNomeKeyReleased(evt);
            }
        });

        buttonOs.setBackground(new java.awt.Color(0, 204, 204));
        buttonOs.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        buttonOs.setForeground(new java.awt.Color(255, 255, 255));
        buttonOs.setText("OS");
        buttonOs.setPreferredSize(new java.awt.Dimension(97, 25));
        buttonOs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonOsActionPerformed(evt);
            }
        });

        jlCarrinho.setFont(new java.awt.Font("SansSerif", 1, 15)); // NOI18N
        jlCarrinho.setForeground(new java.awt.Color(255, 255, 255));
        jlCarrinho.setText("Carrinho");

        jtCarrinho.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jtCarrinho.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Quantidade", "Valor (R$)", "Tipo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jtCarrinho);

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 15)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Valor  R$");

        buttonRemover.setBackground(new java.awt.Color(219, 23, 72));
        buttonRemover.setFont(new java.awt.Font("SansSerif", 1, 15)); // NOI18N
        buttonRemover.setForeground(new java.awt.Color(254, 254, 254));
        buttonRemover.setText("Remover");
        buttonRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRemoverActionPerformed(evt);
            }
        });

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setFont(new java.awt.Font("SansSerif", 1, 15)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Desc. R$");

        jLabel7.setFont(new java.awt.Font("SansSerif", 1, 15)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Total R$");

        jlTotal.setForeground(new java.awt.Color(254, 254, 254));
        jlTotal.setText("0");

        jlDesconto.setForeground(new java.awt.Color(254, 254, 254));
        jlDesconto.setText("0");

        jlValor.setForeground(new java.awt.Color(254, 254, 254));
        jlValor.setText("0");

        jLabel3.setForeground(new java.awt.Color(254, 254, 254));
        jLabel3.setText("Quantidade");

        jPanel1.setBackground(new java.awt.Color(50, 50, 50));

        buttonOrçamento.setBackground(new java.awt.Color(0, 204, 204));
        buttonOrçamento.setFont(new java.awt.Font("SansSerif", 1, 15)); // NOI18N
        buttonOrçamento.setForeground(new java.awt.Color(254, 254, 254));
        buttonOrçamento.setText("Orçamento");
        buttonOrçamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonOrçamentoActionPerformed(evt);
            }
        });

        buttonCaderneta.setBackground(new java.awt.Color(0, 204, 204));
        buttonCaderneta.setFont(new java.awt.Font("SansSerif", 1, 15)); // NOI18N
        buttonCaderneta.setForeground(new java.awt.Color(254, 254, 254));
        buttonCaderneta.setText("Criar Caderneta");
        buttonCaderneta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCadernetaActionPerformed(evt);
            }
        });

        buttonRealizarVenda.setBackground(new java.awt.Color(0, 204, 204));
        buttonRealizarVenda.setFont(new java.awt.Font("SansSerif", 1, 15)); // NOI18N
        buttonRealizarVenda.setForeground(new java.awt.Color(254, 254, 254));
        buttonRealizarVenda.setText("Finalizar Venda");
        buttonRealizarVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRealizarVendaActionPerformed(evt);
            }
        });

        jLabel5.setForeground(new java.awt.Color(254, 254, 254));
        jLabel5.setText("Desconto (%)");

        tfDesconto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfDescontoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfDescontoKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(buttonOrçamento, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(buttonCaderneta, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(buttonRealizarVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(106, 106, 106)
                        .addComponent(tfDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel5))
                .addGap(230, 230, 230))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(489, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel5)))
                .addGap(161, 161, 161)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonOrçamento)
                    .addComponent(buttonCaderneta)
                    .addComponent(buttonRealizarVenda))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(tfNome, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jLabel3)
                        .addGap(8, 8, 8)
                        .addComponent(tfQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(132, 132, 132)
                        .addComponent(buttonOs, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 595, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(buttonRemover, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(419, 419, 419)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jlTotal))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(419, 419, 419)
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(jlDesconto))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(419, 419, 419)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(504, 504, 504)
                        .addComponent(jlValor))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(419, 419, 419)
                        .addComponent(jLabel7))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(255, 255, 255)
                        .addComponent(jlCarrinho))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(buttonVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(413, 413, 413)
                        .addComponent(buttonAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 595, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(jLabel2)
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfNome, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(jLabel3))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(tfQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(buttonOs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(11, 11, 11)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(205, 205, 205)
                        .addComponent(buttonRemover)
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jlTotal))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jlDesconto))
                        .addGap(2, 2, 2)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addComponent(jlValor))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(589, 589, 589)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(296, 296, 296)
                        .addComponent(jlCarrinho))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(buttonVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addComponent(buttonAdicionar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(322, 322, 322)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void buttonVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonVoltarActionPerformed
        
        dispose();
        new MenuPrincipal().setVisible(true);

    }//GEN-LAST:event_buttonVoltarActionPerformed

    private void buttonAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAdicionarActionPerformed
        
        int linha = jtPeca.getSelectedRow();
        if(linha != -1){
            String qtd = tfQuantidade.getText();
            if(!qtd.equals("")){
                int quantidade = Integer.parseInt(tfQuantidade.getText());
                int estoque = Integer.parseInt(tabelaPecas.getValueAt(linha, 1).toString());

                if(quantidade > estoque) {
                    JOptionPane.showMessageDialog(null, "Quantidade escolhida é maior que o estoque");
                }
                else {
                    String produto = tabelaPecas.getValueAt(linha, 0).toString();
                    float valor = quantidade * Float.parseFloat(tabelaPecas.getValueAt(linha, 2).toString());
                    total = total + valor;
                    String v = "" + total;
                    jlTotal.setText(v);
                    String descontoT = tfDesconto.getText();
                    if(!descontoT.equals("")){
                        float porcentagem = Float.parseFloat(descontoT);
                        if(porcentagem > 0) {
                            float desconto = total*(porcentagem/100);
                            jlDesconto.setText((String.format("%.2f", desconto)));
                            float valorTotal = total - desconto;
                            String result = String.format("%.2f", valorTotal);
                            jlValor.setText(result);
                        }
                        else{
                            jlValor.setText("" + total);
                        }
                    }
                    else {
                        jlValor.setText("" + total);
                        jlDesconto.setText("0");
                    }
                    Object[] dados = {produto, quantidade, valor, "Produto"};
                    tabelaCarrinho.addRow(dados);
                    Object d = estoque - quantidade;
                    tabelaPecas.setValueAt(d, linha, 1);
                }
            }
            else{
                JOptionPane.showMessageDialog(null, "Selecione uma quantidade do produto");
            }
        }
        
        else {
            JOptionPane.showMessageDialog(null, "Nenhum produto selecionado para venda");
        }
        
    }//GEN-LAST:event_buttonAdicionarActionPerformed

    private void tfNomeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfNomeKeyPressed

        int tamanho = tabelaPecas.getRowCount();
        for (int i=0; i<tamanho; i++) {
            tabelaPecas.removeRow(0);
        }

        ArrayList<Peca> pecas = pecaController.buscarPorNome(tfNome.getText());
        if(pecas != null){
            for (Peca peca : pecas) {
                Object[] dados = {peca.getNome(), peca.getQuantidade(), peca.getPrecoVenda()};
                tabelaPecas.addRow(dados);
            }
        }

    }//GEN-LAST:event_tfNomeKeyPressed

    private void tfNomeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfNomeKeyReleased

        int tamanho = tabelaPecas.getRowCount();
        for (int i=0; i<tamanho; i++) {
            tabelaPecas.removeRow(0);

        }

        ArrayList<Peca> pecas = pecaController.buscarPorNome(tfNome.getText());
        if(pecas != null){
            for (Peca peca : pecas) {
                Object[] dados = {peca.getNome(), peca.getQuantidade(), peca.getPrecoVenda()};
                tabelaPecas.addRow(dados);
            }
        }
    }//GEN-LAST:event_tfNomeKeyReleased

    private void buttonRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRemoverActionPerformed
        
        int linha = jtCarrinho.getSelectedRow();
        if(linha != -1){
            if(tabelaCarrinho.getValueAt(linha, 3).equals("Produto")){
                for (int i=0; i<tabelaPecas.getRowCount(); i++) {
                    if(tabelaPecas.getValueAt(i, 0) == tabelaCarrinho.getValueAt(linha, 0)){
                        int estoque = Integer.parseInt(tabelaCarrinho.getValueAt(linha, 1).toString()) + Integer.parseInt(tabelaPecas.getValueAt(i, 1).toString());
                        Object quantidade = estoque;
                        tabelaPecas.setValueAt(quantidade, i, 1);
                        break;
                    }
                }
            }
            float valor = Float.parseFloat(tabelaCarrinho.getValueAt(linha, 2).toString());
            total = total - valor;
            String v = "" + total;    
            jlTotal.setText(v);
            String descontoT = tfDesconto.getText();
            if(!descontoT.equals("")){
                float porcentagem = Float.parseFloat(descontoT);
                if(porcentagem >= 0) {
                    float desconto = total*(porcentagem/100);
                    jlDesconto.setText(("" + desconto));
                    float valorTotal = total - desconto;
                    String result = String.format("%.2f", valorTotal);
                    jlValor.setText(result);
                }
            }
            else {
                jlValor.setText("" + total);
                jlDesconto.setText("0");
            }
            
            tabelaCarrinho.removeRow(linha);
            
            if(tabelaCarrinho.getRowCount() == 0) {
                tfDesconto.setText("0");
            }
            
        } 
        else {
            JOptionPane.showMessageDialog(null, "Nenhum item selecionado no carrinho");
        }
        
    }//GEN-LAST:event_buttonRemoverActionPerformed

    private void tfDescontoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfDescontoKeyPressed
        String descontoT = tfDesconto.getText();
        if(!descontoT.equals("")){
            float porcentagem = Float.parseFloat(descontoT);
            if(porcentagem > 0) {
                float desconto = total*(porcentagem/100);
                jlDesconto.setText((String.format("%.2f", desconto)));
                float valorTotal = total - desconto;
                String result = String.format("%.2f", valorTotal);
                jlValor.setText(result);
            }
        }
        else {
            jlValor.setText("" + total);
            jlDesconto.setText("0");
        }

    }//GEN-LAST:event_tfDescontoKeyPressed

    private void tfDescontoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfDescontoKeyReleased
        String descontoT = tfDesconto.getText();
        if(!descontoT.equals("")){
            float porcentagem = Float.parseFloat(descontoT);
            if(porcentagem > 0) {
                float desconto = total*(porcentagem/100);
                jlDesconto.setText((String.format("%.2f", desconto)));
                float valorTotal = total - desconto;
                String result = String.format("%.2f", valorTotal);
                jlValor.setText(result);
            }
        }
        else {
            jlValor.setText("" + total);
            jlDesconto.setText("0");
        }

    }//GEN-LAST:event_tfDescontoKeyReleased

    private void buttonOsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonOsActionPerformed
       
        TelaOS telaOS = new TelaOS(this);
        telaOS.setVisible(true);
        
    }//GEN-LAST:event_buttonOsActionPerformed

    private void buttonRealizarVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRealizarVendaActionPerformed

        int tamanho = tabelaCarrinho.getRowCount();
        
        if(tamanho > 0){
            ArrayList<Integer> quantidades = new ArrayList<Integer>();
            for (int i=0; i<tamanho; i++) {
                String tipo = tabelaCarrinho.getValueAt(i, 3).toString();
                String item = tabelaCarrinho.getValueAt(i, 0).toString();
                
                if(tipo.equals("Produto")){
                    try {
                        Peca p = pecaController.consultarPeca(item);
                        pecasVenda.add(p);
                        int qtd = Integer.parseInt(tabelaCarrinho.getValueAt(i, 1).toString());
                        quantidades.add(qtd);
                    } catch (IOException ex) {
                        Logger.getLogger(TelaRealizarVenda.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(TelaRealizarVenda.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                
                else {
                    Servico s = servicoController.consultarServico(item);
                    servicosVenda.add(s);
                }
            }
            
            float totalVenda = Float.parseFloat(jlTotal.getText().toString().replace(",", "."));
            float desconto;
            if(!tfDesconto.getText().equals("") && !tfDesconto.getText().equals("0") && !tfDesconto.getText().matches("[a-zA-Z]*") && !tfDesconto.getText().matches("[!@#$%*()_=+-]*")){
                desconto = Float.parseFloat(tfDesconto.getText().replace(",", "."));
            }
            else{
                desconto = 0;
            }
            try {
                if(vendaController.realizarVenda(pecasVenda, quantidades, servicosVenda, totalVenda, 1, desconto)){
                    JOptionPane.showMessageDialog(null, "Venda realizada com sucesso");
                    gerarCupomNaoFiscal();
                    servicoController.limparServicos();
                    dispose();
                    new TelaRealizarVenda().setVisible(true);
                }
                else {
                    JOptionPane.showMessageDialog(null, "Erro ao realizar venda");
                }
            } catch (IOException ex) {
                Logger.getLogger(TelaRealizarVenda.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(TelaRealizarVenda.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        else{
            JOptionPane.showMessageDialog(null, "Nenhum item no carrinho");
        }

    }//GEN-LAST:event_buttonRealizarVendaActionPerformed

    private void buttonCadernetaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCadernetaActionPerformed

        int tamanho = tabelaCarrinho.getRowCount();
        
        if(tamanho > 0){
            ArrayList<Integer> quantidades = new ArrayList<Integer>();
            for (int i=0; i<tamanho; i++) {
                String tipo = tabelaCarrinho.getValueAt(i, 3).toString();
                String item = tabelaCarrinho.getValueAt(i, 0).toString();
                
                if(tipo.equals("Produto")){
                    try {
                        Peca p = pecaController.consultarPeca(item);
                        pecasVenda.add(p);
                        int qtd = Integer.parseInt(tabelaCarrinho.getValueAt(i, 1).toString());
                        quantidades.add(qtd);
                    } catch (IOException ex) {
                        Logger.getLogger(TelaRealizarVenda.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(TelaRealizarVenda.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                
                else {
                    Servico s = servicoController.consultarServico(item);
                    servicosVenda.add(s);
                }
            }
            float totalVenda = Float.parseFloat(jlTotal.getText().toString().replace(",", "."));
            float desconto;
            if(!tfDesconto.getText().equals("") && !tfDesconto.getText().equals("0") && !tfDesconto.getText().matches("[a-zA-Z]*") && !tfDesconto.getText().matches("[!@#$%*()_=+-]*")){
                desconto = Float.parseFloat(tfDesconto.getText().replace(",", "."));
            }
            else{
                desconto = 0;
            }
            Venda venda = new Venda(pecasVenda, quantidades, servicosVenda, totalVenda, desconto, 0, Helper.gerarData());
            
            servicoController.limparServicos();
            
            new TelaCadastroCaderneta(venda).setVisible(true);
            dispose();
        }
        else{
            JOptionPane.showMessageDialog(null, "Nenhum item no carrinho");
        }

    }//GEN-LAST:event_buttonCadernetaActionPerformed

    private void buttonOrçamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonOrçamentoActionPerformed

        int tamanho = tabelaCarrinho.getRowCount();
        
        if(tamanho > 0){
            String conteudo = "";
            String nome;
            for(int i=0; i<tamanho; i++){
                nome = tabelaCarrinho.getValueAt(i, 0).toString();
                if(nome.length() < 25){
                    for(int j=nome.length(); j<25; j++){
                        nome = nome + " ";
                    }
                }
                conteudo += nome 
                        + tabelaCarrinho.getValueAt(i, 1) + "    "
                        + tabelaCarrinho.getValueAt(i, 2) + "\n\r";
            }

            Helper.imprimir("   JUNINHO MOTO PECAS E SERVICOS   \n\r"
                    + "------------------------------------\n\r"
                    + "            ORCAMENTO        \n\r"
                    + "------------------------------------\n\r"
                    + "DATA DE IMPRESSAO: " + Helper.gerarData() + " \n\r"
                    + "------------------------------------\n\r"
                    + "DESCRICAO               QTD   PRECO \n\r"
                    + conteudo
                    + "------------------------------------\n\r"
                    + "VALOR: " + jlTotal.getText() + "\n\r"
                    + "DESC.: " + jlDesconto.getText() + "\n\r"
                    + "TOTAL: " + jlTotal.getText() + "\n\r"
                    + "------------------------------------\n\r"
                    + "      OBRIGADO E VOLTE SEMPRE       \n\r"
                    + "\n\r"
                    + "\n\r"
                    + "\n\r"
                    + "\n\r"
                    + "\n\r"
                    + "\n\r"
                    + "\n\r"
                    + "\n\r"
                    + "\n\r"
                    + "\n\r\f"
            );
        }
        else{
            JOptionPane.showMessageDialog(null, "Nenhum item no carrinho");
        }

    }//GEN-LAST:event_buttonOrçamentoActionPerformed

    
    private void gerarCupomNaoFiscal(){
        int tamanho = tabelaCarrinho.getRowCount();
        String conteudo = "";
        String nome;
        for(int i=0; i<tamanho; i++){
            nome = tabelaCarrinho.getValueAt(i, 0).toString();
            if(nome.length() < 25){
                for(int j=nome.length(); j<25; j++){
                    System.out.println("for");
                    nome = nome + " ";
                }
            }
            conteudo += nome 
                    + tabelaCarrinho.getValueAt(i, 1) + "    "
                    + tabelaCarrinho.getValueAt(i, 2) + "\n\r";
        }
        
        Helper.imprimir("   JUNINHO MOTO PECAS E SERVICOS   \n\r"
                + "------------------------------------\n\r"
                + "            CUPOM NAO FISCAL        \n\r"
                + "------------------------------------\n\r"
                + "DATA DE IMPRESSAO: " + Helper.gerarData() + " \n\r"
                + "------------------------------------\n\r"
                + "DESCRICAO               QTD   PRECO \n\r"
                + conteudo
                + "------------------------------------\n\r"
                + "VALOR: " + jlTotal.getText() + "\n\r"
                + "DESC.: " + jlDesconto.getText() + "\n\r"
                + "TOTAL: " + jlTotal.getText() + "\n\r"
                + "------------------------------------\n\r"
                + "      OBRIGADO E VOLTE SEMPRE       \n\r"
                + "\n\r"
                + "\n\r"
                + "\n\r"
                + "\n\r"
                + "\n\r"
                + "\n\r"
                + "\n\r"
                + "\n\r"
                + "\n\r"
                + "\n\r\f"
        );
        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("flatlaf".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaRealizarVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaRealizarVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaRealizarVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaRealizarVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaRealizarVenda().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAdicionar;
    private javax.swing.JButton buttonCaderneta;
    private javax.swing.JButton buttonOrçamento;
    private javax.swing.JButton buttonOs;
    private javax.swing.JButton buttonRealizarVenda;
    private javax.swing.JButton buttonRemover;
    private javax.swing.JButton buttonVoltar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel jlCarrinho;
    private javax.swing.JLabel jlDesconto;
    private javax.swing.JLabel jlTotal;
    private javax.swing.JLabel jlValor;
    private javax.swing.JTable jtCarrinho;
    private javax.swing.JTable jtPeca;
    private javax.swing.JTextField tfDesconto;
    private javax.swing.JTextField tfNome;
    private javax.swing.JTextField tfQuantidade;
    // End of variables declaration//GEN-END:variables
}
